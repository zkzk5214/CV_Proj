%%%%%%%%%%%%  Function fnc_readModel %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Function Purpose:  load model data from Sparse model images.txt,
% cameras.txt  generated by COLMAP
%
% Input Variables:
%        path             files path 
% Returned Results:
%       images    : external parameters (rotation and translation)
%                                       describing camera pose for each image from images.txt
%       cameras :   Intricsic parameter of SimpleRadialCameraModel
%                                            from cameras.txt, format:
%                                            struct 
%
% Processing Flow:
%
% Restrictions/Notes:
%      SimpleRadialCameraModel
%
%  The following functions are called:
%
%  Reference:
%  Author:      LimingGao
%  Date:        04/27/2020
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


function [images,cameras] = fnc_readModel(path)

if numel(path) > 0 && path(end) ~= '/'
    path = [path '/'];
end

cameras = read_cameras([path 'cameras.txt']);
images = read_images([path 'images.txt']);

end

function cameras = read_cameras(path)


fid = fopen(path);
tline = fgets(fid);
while ischar(tline)
    elems = strsplit(tline);
    if numel(elems) < 4 || strcmp(elems(1), '#')
        tline = fgets(fid);
        continue
    end
    camera = struct;
    camera.camera_id = str2num(elems{1});
    camera.model = elems{2};
    if ~strcmp(elems{2}, 'SIMPLE_RADIAL')
        warning('This camera is not SIMPLE_RADIAL model.');
    end
    camera.width = str2num(elems{3});
    camera.height = str2num(elems{4});

    camera.params = zeros(numel(elems) - 5, 1);
    for i = 5:numel(elems) - 1
        camera.params(i - 4) = str2double(elems{i});
    end

    cameras(camera.camera_id) = camera;

    tline = fgets(fid);
   
end

fprintf('Read camera parameters done %d\n', length(cameras));

fclose(fid);

end


function images = read_images(path)

fid = fopen(path);
tline = fgets(fid);
while ischar(tline)
    elems = strsplit(tline);
    if numel(elems) < 4 || strcmp(elems(1), '#')
        tline = fgets(fid);
        continue
    end
    
    image = struct;
    image.image_id = str2num(elems{1});
    qw = str2double(elems{2});
    qx = str2double(elems{3});
    qy = str2double(elems{4});
    qz = str2double(elems{5});
    image.R = fnc_quat2rotmat([qw, qx, qy, qz]);
    % R = quat2rod( [qw, qx, qy, qz]);
    tx = str2double(elems{6});
    ty = str2double(elems{7});
    tz = str2double(elems{8});
    image.t = [tx; ty; tz];
    image.camera_id = str2num(elems{9});
    image.name = elems{10};

    tline = fgets(fid);
    elems = sscanf(tline, '%f');
    elems = reshape(elems, [3, numel(elems) / 3]);
    image.xys = elems(1:2,:)';
    image.point3D_ids = elems(3,:)';

    images(image.image_id) = image;

    tline = fgets(fid);
end
fprintf('Read image parameters done %d\n', length(images));

fclose(fid);

end